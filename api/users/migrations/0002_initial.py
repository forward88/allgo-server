# Generated by Django 3.2.8 on 2022-01-18 09:30

import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('challenges', '0001_initial'),
        ('teams', '0001_initial'),
        ('users', '0001_create_case_insensitive_collation'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserObstacle',
            fields=[
                ('user_obstacle_id', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('iteration', models.PositiveSmallIntegerField()),
                ('sequence_rank', models.PositiveSmallIntegerField()),
                ('amount_completed', models.DecimalField(decimal_places=3, max_digits=16)),
            ],
            options={
                'db_table': 'users_user_obstacle_view',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='APIUser',
            fields=[
                ('user_id', models.UUIDField(db_column='id', default=uuid.uuid4, editable=False, primary_key=True, serialize=False, verbose_name='User ID')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, unique=True)),
                ('state', models.CharField(choices=[('P', 'Authentication Pending'), ('A', 'Active'), ('D', 'Deactivated')], default='P', max_length=1)),
                ('first_sign_in', models.DateTimeField(blank=True, null=True, verbose_name='First Sign In')),
                ('last_sign_in', models.DateTimeField(blank=True, null=True, verbose_name='Last Sign In')),
                ('last_access', models.DateTimeField(blank=True, null=True, verbose_name='Last Access')),
                ('refresh_token_revocation_cursor', models.PositiveIntegerField(default=0, verbose_name='Refresh Token Revocation Cursor')),
                ('ctime', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'API User',
            },
        ),
        migrations.CreateModel(
            name='UserChallenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iteration', models.PositiveSmallIntegerField()),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_challenges', to='challenges.challenge')),
            ],
            options={
                'verbose_name': 'User Challenge',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nickname', models.CharField(db_collation='case_insensitive', default=None, max_length=15, null=True)),
                ('api_user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to='users.apiuser', verbose_name='API User')),
                ('team', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='teams.team')),
            ],
            options={
                'verbose_name': 'User Profile',
            },
        ),
        migrations.CreateModel(
            name='UserChallengePhase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('span', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('start_action', models.CharField(choices=[('J', 'Join'), ('P', 'Pause'), ('U', 'Unpause'), ('L', 'Leave'), ('C', 'Complete'), ('E', 'Expire')], max_length=1)),
                ('end_action', models.CharField(choices=[('J', 'Join'), ('P', 'Pause'), ('U', 'Unpause'), ('L', 'Leave'), ('C', 'Complete'), ('E', 'Expire')], max_length=1)),
                ('user_challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phases', to='users.userchallenge')),
            ],
        ),
        migrations.AddField(
            model_name='userchallenge',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_challenges', to='users.userprofile'),
        ),
        migrations.CreateModel(
            name='ObstacleActivityWindow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('span', django.contrib.postgres.fields.ranges.DateTimeRangeField()),
                ('sequence_rank', models.PositiveSmallIntegerField()),
                ('challenge_phase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='obstacle_windows', to='users.userchallengephase')),
            ],
        ),
        migrations.AddConstraint(
            model_name='userprofile',
            constraint=models.UniqueConstraint(fields=('nickname',), name='unique_nickname'),
        ),
        migrations.AlterUniqueTogether(
            name='userchallenge',
            unique_together={('user', 'challenge', 'iteration')},
        ),
    ]
