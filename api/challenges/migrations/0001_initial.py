# Generated by Django 3.2.8 on 2022-01-18 09:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1024)),
                ('description', models.TextField()),
                ('duration', models.DurationField(help_text='Specify durations as such: "&lt;number&gt; days".')),
                ('xp_value', models.PositiveIntegerField(verbose_name='XP Value')),
                ('external_url', models.URLField(blank=True, default=None, max_length=1024, null=True, verbose_name='External URL')),
                ('ctime', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChallengeCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('icon_emoji', models.CharField(max_length=4)),
            ],
            options={
                'verbose_name': 'Challenge Category',
                'verbose_name_plural': 'Challenge Categories',
            },
        ),
        migrations.CreateModel(
            name='ChallengeColorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('background_rgb', models.CharField(max_length=8, verbose_name='Background RGB')),
                ('title_rgb', models.CharField(max_length=8, verbose_name='Title RGB')),
                ('description_rgb', models.CharField(max_length=8, verbose_name='Description RGB')),
                ('closest_css3_color', models.CharField(max_length=64, verbose_name='Closest CSS3 Color (BG)')),
            ],
            options={
                'verbose_name': 'Challenge Color Profile',
            },
        ),
        migrations.CreateModel(
            name='ChallengeXPBaseline',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_days', models.PositiveIntegerField(choices=[(1, 'Day'), (7, 'Week'), (28, 'Month'), (365, 'Year')], verbose_name='Duration')),
                ('difficulty', models.CharField(choices=[('E', 'Easy'), ('M', 'Medium'), ('H', 'Hard')], max_length=1)),
                ('xp_baseline', models.PositiveIntegerField(verbose_name='XP Baseline')),
            ],
            options={
                'verbose_name': 'Challenge XP Baseline',
            },
        ),
        migrations.CreateModel(
            name='ObstacleTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singular_name', models.CharField(max_length=1024, verbose_name='Singular Name')),
                ('plural_name', models.CharField(max_length=1024, verbose_name='Plural Name')),
                ('discrete', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Obstacle Task',
            },
        ),
        migrations.CreateModel(
            name='Obstacle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interval', models.CharField(choices=[('D', 'Daily'), ('W', 'Weekly'), ('M', 'Monthly')], max_length=1)),
                ('sequence_rank', models.PositiveSmallIntegerField(blank=True, default=None, null=True)),
                ('threshold', models.DecimalField(decimal_places=3, max_digits=16)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.challenge')),
                ('subcategory', models.ForeignKey(blank=True, help_text='Subcategory only pertinant for Mixed challenges', null=True, on_delete=django.db.models.deletion.PROTECT, to='challenges.challengecategory')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='challenges.obstacletask')),
            ],
        ),
    ]
